<%- include('./partials/header.ejs') %> 

<div class="post_single_body" id="div_<%= locals.postInfo.publicID %>">

    <div class="postSingle" id="div_<%= locals.postInfo.publicID %>">
                
        <div class="userPopupContainer">

            
            <div class="profilePopup">
                <img class="profile_picture" src="/assets/profile1.png">

                <div class="profile_popup_subcontainer">
                    <a href="/users/<%= locals.postInfo.poster %>"><%= locals.postInfo.poster %></a>
                    <span class="follow_btn_span fa-icon">
                        <button id="followBtn_<%=locals.postInfo.poster %>" class="followBtn">Follow</button>
                    </span>
                </div>
                
                <a href="/users/<%= locals.postInfo.poster %>">Loading</a>
                <a href="/users/<%= locals.postInfo.poster %>">Loading</a>

            </div>
    

            <a class="userProfileLink name_<%= locals.postInfo.poster %>" href="/users/<%=locals.postInfo.poster %>"> <%= locals.postInfo.poster %> </a>
        </div>


        <div class="post_single_content">
            <i class="fa-solid fa-quote-left"></i>
            <h2 class="post_single_quote"> <%= locals.postInfo.content %> </h2>
            <i class="fa-solid fa-quote-right"></i>
            <h4 class="post_single_author"> - <%= locals.postInfo.quoteAuthor %> </h4>
        </div>


        <div class="post_single_footer">
            <div class="post_single_tags">
                <% locals.postInfo.tags.forEach( tag =>{ %>
                    <a href="/results?search_query=<%= tag %>">#<%= tag %>&nbsp</a>
                <% }) %>   
            </div>
                
            <div class="post_single_buttons">
                <!-- delete/favorite button -->
                <% if(locals.userInfo.username === locals.postInfo.poster){ %>
                    <span class="fa-icon delete_btn_span">
                        <button class="deleteButton" id="delete_<%= locals.postInfo.publicID %>" aria-label="Delete"></button>
                    </span>
                <% }else{ %>
                    <% if(locals.postInfo.favoritedBy.includes(locals.userInfo.username)){ %>
                        <span class="fa-icon favorite_btn_span" aria-label="Favorite">
                            <button class="favoriteButton favorited" id="favorite_<%= locals.postInfo.publicID %>" ></button>
                        </span>
                    <% }else{ %>
                        <span class="fa-icon favorite_btn_span" aria-label="Favorite">
                            <button class="favoriteButton <%= locals.authRequired %>" id="favorite_<%= locals.postInfo.publicID %>"></button>
                        </span>
                    <% } %>
                <% } %>
            </div>

        </div>
    
    </div>

    <!-- Comments -->
    <div class="commentsDiv" id="commentsDiv">

        <div class="comments_subcontainer">
            <a  href=<%= '/posts/'+ locals.postInfo.publicID %>> <%= locals.postInfo.comments.length %> comments </a>
    
            <form action="./newComment" method="post" class="<%= locals.authRequired %>"> 
                <input type="hidden" name="postUrl" value=<%= locals.postInfo.publicID %>>
                <input type="hidden" name="replyingToID" value=<%=  locals.postInfo.null || 'originalPost' %>>
    
                <input type="text" name="commentContent">
                <input type="submit" value="Comment">
                
            </form>
        </div>

    </div>

</div>







<% if(locals.userInfo.isLoggedIn){%>
<script>
// fetch comments
    let fetchComments = async function(url){
        try{
            let fetcher = await fetch(url);
            
            if(fetcher.ok === true){
                //checks if the fetching was successful
                console.log('Fetch Done');
                let json = await((fetcher).json()); 
                return json
            }
        }
        catch(e){console.error(e)}
    }


    function loadComments(commentsJson){

        let commentsDiv = document.getElementById('commentsDiv');

        if(commentsJson[0]){
            let index = 0;
            let flag = commentsJson[0];

            while(flag){

                if(commentsJson[index].replyingToID === 'originalPost'){
                    // is replying to main post

                    let commentHtml = `

                        <div class="userPopupContainer">
                            <div class="profilePopup">
                                <img class="profile_picture" src="/assets/profile1.png">

                                <div class="profile_popup_subcontainer">
                                    <a href="/users/${commentsJson[index].commentAuthor}">${commentsJson[index].commentAuthor}</a>
                                    <span class="follow_btn_span fa-icon">
                                        <button id="followBtn_${commentsJson[index].commentAuthor}" class="followBtn">Follow</button>
                                    </span>
                                </div>
                                
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>

                            </div>

                    
                            <a class="userProfileLink name_${commentsJson[index].commentAuthor}" href="/users/${commentsJson[index].commentAuthor}"> ${commentsJson[index].commentAuthor} </a>
                        </div>

                        <p>  ${commentsJson[index].commentContent} </p>
                    `;

                    let replyFormHtml = `
                        <input type="hidden" name="postUrl" value=<%= locals.postInfo.publicID %>>
                        <input type="hidden" name="replyingToID" value=<%=  locals.postInfo.null || '${commentsJson[index].commentID}' %>>

                        <input type="text" name="commentContent" id="commentContent">
                        <input type="submit" value="Comment">
                    `;

                    
                    let newCommentDiv = document.createElement('div');
                    newCommentDiv.id = commentsJson[index].commentID;
                    newCommentDiv.className = 'commentTopLevel comment';
                    
                    newCommentDiv.innerHTML = commentHtml

                    let replyButton = document.createElement('button');
                    replyButton.textContent = 'Reply';
                    replyButton.className = 'replyButton'
                    
                    let cancelReplyButton = document.createElement('button');
                    cancelReplyButton.textContent = 'Cancel';

                    let replyForm = document.createElement('form');
                    replyForm.action = './newComment';
                    replyForm.method = 'post';
                    replyForm.innerHTML = replyFormHtml;
                    replyForm.appendChild(cancelReplyButton);
                    

                    replyButton.addEventListener('click',()=>{
                        // newCommentDiv.appendChild(replyForm);
                        newCommentDiv.insertBefore(replyForm, newCommentDiv.childNodes[4]);
                        newCommentDiv.removeChild(replyButton);
                    });

                    cancelReplyButton.addEventListener('click', ()=>{
                        newCommentDiv.removeChild(replyForm);
                        // newCommentDiv.appendChild(replyButton);
                        newCommentDiv.insertBefore(replyButton, newCommentDiv.childNodes[4]);
                    });

                    newCommentDiv.appendChild(replyButton);
                    commentsDiv.appendChild(newCommentDiv);

                }
                else{
                    // is replying to a comment
                    let parentCommentDiv = document.getElementById(`${commentsJson[index].replyingToID}`);
                    
                    let commentHtml = `
                        <div class="userPopupContainer">
                            <div class="profilePopup">
                                <img class="profile_picture" src="/assets/profile1.png">

                                <div class="profile_popup_subcontainer">
                                    <a href="/users/${commentsJson[index].commentAuthor}">${commentsJson[index].commentAuthor}</a>
                                    <span class="follow_btn_span fa-icon">
                                        <button id="followBtn_${commentsJson[index].commentAuthor}" class="followBtn">Follow</button>
                                    </span>
                                </div>
                                
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>

                            </div>
                    
                            <a class="userProfileLink name_${commentsJson[index].commentAuthor}" href="/users/${commentsJson[index].commentAuthor}"> ${commentsJson[index].commentAuthor} </a>
                        </div>

                        <p>  ${commentsJson[index].commentContent} </p>
                    `;
                    let replyFormHtml = `
                        <input type="hidden" name="postUrl" value=<%= locals.postInfo.publicID %>>
                        <input type="hidden" name="replyingToID" value=<%=  locals.postInfo.null || '${commentsJson[index].commentID}' %>>

                        <input type="text" name="commentContent">
                        <input type="submit" value="Comment">
                    `;

                    
                    let newCommentDiv = document.createElement('div');
                    newCommentDiv.id = commentsJson[index].commentID;
                    newCommentDiv.className = 'commentReplyLevel comment';
                    
                    newCommentDiv.innerHTML = commentHtml

                    let replyButton = document.createElement('button');
                    replyButton.textContent = 'Reply';
                    replyButton.className = 'replyButton'


                    let cancelReplyButton = document.createElement('button');
                    cancelReplyButton.textContent = 'Cancel';

                    let replyForm = document.createElement('form');
                    replyForm.action = './newComment';
                    replyForm.method = 'post';
                    replyForm.innerHTML = replyFormHtml;
                    replyForm.appendChild(cancelReplyButton);
                    

                    replyButton.addEventListener('click',()=>{
                        // newCommentDiv.appendChild(replyForm);
                        newCommentDiv.insertBefore(replyForm, newCommentDiv.childNodes[4]);
                        newCommentDiv.removeChild(replyButton);
                    });

                    cancelReplyButton.addEventListener('click', ()=>{
                        newCommentDiv.removeChild(replyForm);
                        // newCommentDiv.appendChild(replyButton);
                        newCommentDiv.insertBefore(replyButton, newCommentDiv.childNodes[4]);
                    });

                    newCommentDiv.appendChild(replyButton);
                    parentCommentDiv.appendChild(newCommentDiv);
                }

                index = index + 1;
                flag = commentsJson[index];
            }
            
        }
        else{
            // Load 'no comments yet' message on post
            let newCommentDiv = document.createElement('div');
            newCommentDiv.className = 'no_comments_div'
            newCommentDiv.innerHTML = '<h3>No Comments Yet</H3>'

            commentsDiv.appendChild(newCommentDiv);

        }
        
    }

    let comments = fetchComments('./comments/'+"<%= locals.postInfo.publicID %>");

    comments.then( data =>{
        comments = data;
        loadComments(comments);

        let userCollection = document.getElementsByClassName('userProfileLink');

        for (let index = 0; index < userCollection.length; index++) {
            userCollection[index].addEventListener('mouseover',async()=>{
                let username = userCollection[index].className.slice(21);
                let popupDiv = userCollection[index].parentNode.children[0];
                
                if(popupDiv.children[2].innerText === 'Loading'){

                    let fetcher = await (await fetch('/users/popup/'+username)).json();
                    
                    popupDiv.children[0].src = fetcher.profileImg;
                    
                    if(fetcher.followStatus){
                        popupDiv.children[1].children[1].className = popupDiv.children[1].children[1].className+' follow_btn_span_following';
                    }
                    
                    popupDiv.children[2].innerText = fetcher.followers+' Followers';
                    popupDiv.children[3].innerText = fetcher.following+' Following';
                }
            });
            
        }
    });

//deleteButton
    let deleteButtonCollection = document.getElementsByClassName('deleteButton');
    let array = [];

    for (let index = 0; index < deleteButtonCollection.length; index++) {
        array[index] = deleteButtonCollection[index];
    }

    array.forEach(deleteButton => {
        deleteButton.addEventListener('click', async()=>{
            let fetcher = await (await fetch('./delete/'+deleteButton.id.slice(7),{method:'POST'})).json();
            if(fetcher.action === 'deleted'){
                let deleteDiv = document.getElementById('div_'+deleteButton.id.slice(7));
                deleteDiv.innerHTML = '<h2> Post deleted successfully</h2>'
            }
            else{
                // it should never get to this path if the user does not mess with http request
                // just as precaution: redirect to GET/all
                window.location.href = "/all";
            }
        });
    });

//favoriteButton
    let favorite_button = document.getElementById('favorite_<%= locals.postInfo.publicID %>');
    favorite_button.addEventListener('click', async ()=>{
        let fetcher = await (await fetch('/users/favorite/'+favorite_button.id.slice(9),{method:'post'})).json();
        if(fetcher.action === 'removed'){
            favorite_button.className = 'favoriteButton'; // remove favorited class
        }
        if(fetcher.action === 'added'){
            favorite_button.className = 'favoriteButton favorited'; // add favorited class
        }
    });

</script>
<% } %>

<% if(!locals.userInfo.isLoggedIn){%>
<script>
// fetch comments
    let fetchComments = async function(url){
        try{
            let fetcher = await fetch(url);
            
            if(fetcher.ok === true){
                //checks if the fetching was successful
                console.log('Fetch Done');
                let json = await((fetcher).json()); 
                return json
            }
        }
        catch(e){console.error(e)}
    }

    function loadComments(commentsJson){

        let commentsDiv = document.getElementById('commentsDiv');

        if(commentsJson[0]){
            let index = 0;
            let flag = commentsJson[0];

            while(flag){

                if(commentsJson[index].replyingToID === 'originalPost'){
                    // is replying to main post

                    let commentHtml = `
                        <div class="userPopupContainer">
                            <div class="profilePopup">
                                <img class="profile_picture" src="/assets/profile1.png">

                                <div class="profile_popup_subcontainer">
                                    <a href="/users/${commentsJson[index].commentAuthor}">${commentsJson[index].commentAuthor}</a>
                                    <span class="follow_btn_span fa-icon">
                                        <button id="followBtn_${commentsJson[index].commentAuthor}" class="followBtn">Follow</button>
                                    </span>
                                </div>
                                
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>

                            </div>
                    
                            <a class="userProfileLink name_${commentsJson[index].commentAuthor}" href="/users/${commentsJson[index].commentAuthor}"> ${commentsJson[index].commentAuthor} </a>
                        </div>

                        <p>  ${commentsJson[index].commentContent} </p>
                    `;

                    let newCommentDiv = document.createElement('div');
                    newCommentDiv.id = commentsJson[index].commentID;
                    newCommentDiv.className = 'commentTopLevel comment';
                    
                    newCommentDiv.innerHTML = commentHtml

                    let replyButton = document.createElement('button');
                    replyButton.textContent = 'Reply';
                    replyButton.className = 'replyButton'

                    replyButton.addEventListener('click', (e)=>{
                        e.preventDefault();
                        renderPopup();
                    });

                    newCommentDiv.appendChild(replyButton);
                    commentsDiv.appendChild(newCommentDiv);

                }
                else{
                    // is replying to a comment
                    let parentCommentDiv = document.getElementById(`${commentsJson[index].replyingToID}`);
                    
                    let commentHtml = `
                        <div class="userPopupContainer">
                            <div class="profilePopup">
                                <img class="profile_picture" src="/assets/profile1.png">

                                <div class="profile_popup_subcontainer">
                                    <a href="/users/${commentsJson[index].commentAuthor}">${commentsJson[index].commentAuthor}</a>
                                    <span class="follow_btn_span fa-icon">
                                        <button id="followBtn_${commentsJson[index].commentAuthor}" class="followBtn">Follow</button>
                                    </span>
                                </div>
                                
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>
                                <a href="/users/${commentsJson[index].commentAuthor}">Loading</a>

                            </div>
                    
                            <a class="userProfileLink name_${commentsJson[index].commentAuthor}" href="/users/${commentsJson[index].commentAuthor}"> ${commentsJson[index].commentAuthor} </a>
                        </div>

                        <p>  ${commentsJson[index].commentContent} </p>
                    `;

                    
                    let newCommentDiv = document.createElement('div');
                    newCommentDiv.id = commentsJson[index].commentID;
                    newCommentDiv.className = 'commentReplyLevel comment';
                    
                    newCommentDiv.innerHTML = commentHtml

                    let replyButton = document.createElement('button');
                    replyButton.textContent = 'Reply';
                    replyButton.className = 'replyButton'                   

                    replyButton.addEventListener('click', (e)=>{
                        e.preventDefault();
                        renderPopup();
                    });

                    newCommentDiv.appendChild(replyButton);
                    parentCommentDiv.appendChild(newCommentDiv);
                }

                index = index + 1;
                flag = commentsJson[index];
            }
            
        }
        else{
            // Load 'no comments yet' message on post
            let newCommentDiv = document.createElement('div');
            newCommentDiv.className = 'no_comments_div'
            newCommentDiv.innerHTML = '<h3>No Comments Yet</H3>'

            commentsDiv.appendChild(newCommentDiv);

        }
        
    }

    let comments = fetchComments('./comments/'+"<%= locals.postInfo.publicID %>");

    comments.then( data =>{
        comments = data;
        loadComments(comments);
        
        let userCollection = document.getElementsByClassName('userProfileLink');

        for (let index = 0; index < userCollection.length; index++) {
            userCollection[index].addEventListener('mouseover',async()=>{
                let username = userCollection[index].className.slice(21);
                let popupDiv = userCollection[index].parentNode.children[0];
                
                if(popupDiv.children[2].innerText === 'Loading'){

                    let fetcher = await (await fetch('/users/popup/'+username)).json();
                    
                    popupDiv.children[0].src = fetcher.profileImg;
                    
                    if(fetcher.followStatus){
                        popupDiv.children[1].children[1].className = popupDiv.children[1].children[1].className+' follow_btn_span_following';
                    }
                    
                    popupDiv.children[2].innerText = fetcher.followers+' Followers';
                    popupDiv.children[3].innerText = fetcher.following+' Following';
                }
            });
            
        }
    });


//Log/Reg Popup
    async function renderPopup(){
        if(!document.getElementById('loginDiv')){
            let popupDiv = document.createElement('div');
            popupDiv.innerHTML = await (await fetch('/popup_login_html',{method:'POST'})).text();
            popupDiv.id = 'popupDiv';
            
            let loginPopupScript = document.createElement('script');
            loginPopupScript.innerHTML = await(await fetch('/scripts/loginPopup.js')).text();
            
            let body = document.body;
            body.append(popupDiv);
            body.append(loginPopupScript);
        }else{
            document.getElementById('popupDiv').style.display = 'block';
        }
    }


</script>
<% } %>

