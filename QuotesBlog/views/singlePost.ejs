<h3> <%= locals.postInfo.poster || '-' %></h3>
<h2> <%= locals.postInfo.content || '-' %> </h2> 
<h2> - <%= locals.postInfo.quoteAuthor || '-' %></h2>

<p>Tags</p>

<% locals.postInfo.tags.forEach(tag=>{ %>
    <a href=""> <%= tag %> </a>, 
<% }) %>


<p>Comments</p>

<form action="./newComment" method="post"> 
    <input type="hidden" name="postUrl" value=<%= locals.postInfo.publicID %>>
    <input type="hidden" name="replyingToID" value=<%=  locals.postInfo.null || 'originalPost' %>>

    <input type="text" name="commentContent" id="commentContent">
    <input type="submit" value="Comment">
    
</form>


<div class="commentsDiv" id="commentsDiv">

</div>


<script>
    
let fetchComments = async function(url){
    try{
        let fetcher = await fetch(url);
        
        if(fetcher.ok === true){
            //checks if the fetching was successful
            console.log('Fetch Done');
            let json = await((fetcher).json()); 
            return json
        }
    }
    catch(e){console.error(e)}
}

function loadComments(commentsJson){

    let commentsDiv = document.getElementById('commentsDiv');

    if(commentsJson[0]){
        let index = 0;
        let flag = commentsJson[0];

        while(flag){

            if(commentsJson[index].replyingToID === 'originalPost'){
                // is replying to main post
                console.log(commentsJson[index]);

                let commentHtml = `
                    <h3> user: ${commentsJson[index].commentAuthor} </h3>
                    <p>  ${commentsJson[index].commentContent} <p>
                `;
                let replyFormHtml = `
                    <input type="hidden" name="postUrl" value=<%= locals.postInfo.publicID %>>
                    <input type="hidden" name="replyingToID" value=<%=  locals.postInfo.null || '${commentsJson[index].commentID}' %>>

                    <input type="text" name="commentContent" id="commentContent">
                    <input type="submit" value="Comment">
                `;

                
                let newCommentDiv = document.createElement('div');
                newCommentDiv.id = commentsJson[index].commentID;
                newCommentDiv.className = 'commentTopLevel';
                
                newCommentDiv.innerHTML = commentHtml
                newCommentDiv.style.border = 'black 1px solid' //placeHolder

                let replyButton = document.createElement('button');
                replyButton.textContent = 'Reply';

                let cancelReplyButton = document.createElement('button');
                cancelReplyButton.textContent = 'Cancel';

                let replyForm = document.createElement('form');
                replyForm.action = './newComment';
                replyForm.method = 'post';
                replyForm.innerHTML = replyFormHtml;
                replyForm.appendChild(cancelReplyButton);
                

                replyButton.addEventListener('click',()=>{
                    newCommentDiv.appendChild(replyForm);
                    newCommentDiv.removeChild(replyButton);
                });

                cancelReplyButton.addEventListener('click', ()=>{
                    newCommentDiv.removeChild(replyForm);
                    newCommentDiv.appendChild(replyButton);
                });

                newCommentDiv.appendChild(replyButton);
                commentsDiv.appendChild(newCommentDiv);

            }
            else{
                // is replying to a comment
            }

            index = index + 1;
            flag = commentsJson[index];
        }
        
        console.log(`index = ${index} --- flag = ${flag}`);
        
    }
    else{
        // Load 'no comments yet' message on post
        let newCommentDiv = document.createElement('div');
        newCommentDiv.innerHTML = '<h3>No Comments Yet</H3>'

        commentsDiv.appendChild(newCommentDiv);

    }
    
}

let comments = fetchComments('./comments/'+"<%= locals.postInfo.publicID %>");

comments.then( data =>{
    comments = data;
    loadComments(comments)
});

</script>
