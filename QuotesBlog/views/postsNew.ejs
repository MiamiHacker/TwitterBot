<%- include('./partials/header.ejs') %>

<br>
<form action="/posts/new" method="post">

    <label for="postContent">Content</label>
    <input type="text" name="postContent" id="postContent">
    <br>

    <label for="quoteAuthor">Author</label>
    <input type="text" name="quoteAuthor" id="quoteAuthor">
    <br>

    <div id="postTagsDiv">
        <label for="postTagsVisible">Tags</label>
    </div>
    <br>

    <input type="submit" value="Submit">

</form>

<script>

    let postTagsDiv = document.getElementById('postTagsDiv');
    
    let inputTextHidden = document.createElement('input');{
    inputTextHidden.type = 'text';
    inputTextHidden.name = 'postTags'
    // inputTextHidden.style.visibility = 'hidden';
    }

    let newTagCardsDiv = document.createElement('div');{
    newTagCardsDiv.id = 'newTagCardsDiv';
    }

    let inputTextVisible = document.createElement('input');{
    inputTextVisible.type = 'text';
    inputTextVisible.id = 'postTagsVisible'
    inputTextVisible.name = 'postTagsVisible'
    inputTextVisible.placeholder = 'Enter tags separated by commas';
    }

    function addTagToPost(newTag){

        newTag = newTag.replace(/\s+/g,'')

        let newTagCard = document.createElement('div');
        newTagCard.className = 'searchTagCard';
        newTagCard.style.border = 'black 1px solid';
        newTagCard.id = 'tag'+Date.now();
        
        let tagText = document.createElement('p');
        tagText.innerText = newTag;
        
        let deleteTagButton = document.createElement('button');
        deleteTagButton.innerText = 'x';
        deleteTagButton.type = 'button';
        deleteTagButton.addEventListener('click',()=>{deleteTagFromPost(newTag, newTagCard.id)});

        newTagCard.appendChild(tagText);
        newTagCard.appendChild(deleteTagButton);
        newTagCardsDiv.appendChild(newTagCard);

        if(inputTextHidden.value === ''){
            inputTextHidden.value = newTag;    
        }    
        else{
            inputTextHidden.value = newTag+','+inputTextHidden.value;
        }
    }
    
    function deleteTagFromPost(tagToDelete, id){
        inputTextHidden.value = inputTextHidden.value.replace(tagToDelete+',','');
        inputTextHidden.value = inputTextHidden.value.replace(','+tagToDelete,'');
        inputTextHidden.value = inputTextHidden.value.replace(tagToDelete,'');
        
        let divToDelete = document.getElementById(id);
        divToDelete.remove();

    }   


    inputTextVisible.addEventListener('keydown', (key)=>{
        if(key.code === 'Comma'){
            if(inputTextVisible.value.replace(/\s+/g,'') !== ''){
                if(inputTextHidden.value.includes(inputTextVisible.value)){
                    console.log(inputTextVisible.value+' tag is already in search query');
                }
                else{
                    addTagToPost(inputTextVisible.value);
                }
            }
            inputTextVisible.value = '';
        }
    });
    
    inputTextVisible.addEventListener('keyup', (key)=>{
        if(key.code === 'Comma'){
            inputTextVisible.value = '';
        }
    });
    
    
    postTagsDiv.appendChild(newTagCardsDiv);
    postTagsDiv.appendChild(inputTextVisible);
    postTagsDiv.appendChild(inputTextHidden);

</script>